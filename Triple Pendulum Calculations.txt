// a = A(Bw-g*d)/det

const float g, m1, m2, m3, l1, l2, l3
double theta1, theta2, theta3, omega1, omega2, omega3, alpha1, alpha2, alpha3

m23  =      m2 + m3
m123 = m1 + m2 + m3

<loop>

c12 = cos(theta1 - theta2)
c13 = cos(theta1 - theta3)
c23 = cos(theta2 - theta3)
s12 = sin(theta1 - theta2)
s13 = sin(theta1 - theta3)
s23 = sin(theta2 - theta3)
s21 = -s12
s31 = -s13
s32 = -s23

A11 =                        1             - (m3 * c23 * c23)  / m23
A12 =  (m3 * l2 * c13 * c23) / (m123 * l1) - (m23 * l2 * c12)  / (m123 * l1)
A13 =  (m3 * l3 * c12 * c23) / (m123 * l1) - (m3 * l3 * c13)   / (m123 * l1)
A21 =  (m3 * l1 * c13 * c23) /  (m23 * l2) - (l1 * c12)        / l2
A22 =                        1             - (m3 * c13 * c13)  / m123
A23 =  (m3 * l3 * c12 * c13) / (m123 * l2) - (m3 * l3 * c23)   / (m23 * l2)
A31 =       (l1 * c12 * c23) / l3          - (l1 * c13)        / l3
A32 = (m23 * l2 * c12 * c13) / (m123 * l3) - (l2 * c23)        / l3
A33 =                        1             - (m23 * c12 * c12) / m123

det = (m23 * m123 + 2 * m3 * m23 * c12 * c13 * c23 - m3 * m3 * c12 * c12 - m3 * m23 * c13 - m2 * m123 * c23) / (m23 * m123)

B11 =                  0
B12 = (m23 * l2 * s21) / (m123 * l1)
B13 =  (m3 * l3 * s31) / (m123 * l1)
B21 =       (l1 * s12) / l2
B22 =                  0
B23 =  (m3 * l3 * s32) / (m23 * l2)
B31 =       (l1 * s13) / l3
B32 =       (l2 * s23) / l3
B33 =                  0

w1 = omega1 * omega1
w2 = omega2 * omega2
w3 = omega3 * omega3

d1 = sin(theta1) / l1
d2 = sin(theta2) / l2
d3 = sin(theta3) / l3

f1 = B11 * w1 + B12 * w2 + B13 * w3 - g * d1
f2 = B21 * w1 + B22 * w2 + B23 * w3 - g * d2
f3 = B31 * w1 + B32 * w2 + B33 * w3 - g * d3

alpha1 = A11 * f1 + A12 * f2 + A13 * f3
alpha2 = A21 * f1 + A22 * f2 + A23 * f3
alpha3 = A31 * f1 + A32 * f2 + A33 * f3
alpha1 /= det
alpha2 /= det
alpha3 /= det

omega1 += alpha1 * dt
omega2 += alpha2 * dt
omega3 += alpha3 * dt
theta1 += omega1 * dt
theta2 += omega2 * dt
theta3 += omega3 * dt

<endloop>
